/* eslint-disable @typescript-eslint/no-unused-vars */
import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { signIn, signOut, useSession } from "next-auth/react";
import { trpc } from "../utils/trpc";
import { Fragment } from "react";
import ListarProductos from "src/components/ListarProductos";

const Home: NextPage = () => {
  return (
    <Fragment>
      <Head>
        <title>PT ICB</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="mx-auto my-12 max-w-5xl text-center">
        <h1 className="text-4xl font-bold mb-5">Bienvenido a PT-ICB</h1>
        <section>
          <p className="pb-5">Hola esta es una prueba tecnica realizada para PT-ICB espero que les guste o me puedan dejar un comentario en GitHub</p>
          <ListarProductos limit={6} />
          <article className="flex flex-row-reverse mt-5 justify-start">
            <Link href={'/productos'} className='bg-blue-500 p-3 w-max text-white rounded shadow shadow-black transition-all duration-150 hover:bg-blue-700'>Ver todos...</Link>
          </article>
        </section>
      </main>
    </Fragment>
  );
};

export default Home;

const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = trpc.auth.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined },
  );

  return (
    <div className="flex flex-col items-center justify-center gap-2">
      {sessionData && (
        <p className="text-2xl text-blue-500">
          Logged in as {sessionData?.user?.name}
        </p>
      )}
      {secretMessage && (
        <p className="text-2xl text-blue-500">{secretMessage}</p>
      )}
      <button
        className="rounded-md border border-black bg-violet-50 px-4 py-2 text-xl shadow-lg hover:bg-violet-100"
        onClick={sessionData ? () => signOut() : () => signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
};

type TechnologyCardProps = {
  name: string;
  description: string;
  documentation: string;
};

const TechnologyCard = ({
  name,
  description,
  documentation,
}: TechnologyCardProps) => {
  return (
    <section className="flex flex-col justify-center rounded border-2 border-gray-500 p-6 shadow-xl duration-500 motion-safe:hover:scale-105">
      <h2 className="text-lg text-gray-700">{name}</h2>
      <p className="text-sm text-gray-600">{description}</p>
      <Link
        className="m-auto mt-3 w-fit text-sm text-violet-500 underline decoration-dotted underline-offset-2"
        href={documentation}
        target="_blank"
        rel="noreferrer"
      >
        Documentation
      </Link>
    </section>
  );
};
